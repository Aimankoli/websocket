fastapi
uvicorn
websocket
sqlalchemy


import React, { useState, useEffect, useRef } from "react";

function WebSocketChat() {
  const [messages, setMessages] = useState([]);
  const [input, setInput] = useState("");
  const [ws, setWs] = useState(null); // WebSocket state
  const roleRef = useRef(null); // Store role locally

  // Establish WebSocket connection when component mounts
  useEffect(() => {
    const client_id = window.prompt("Enter your ID (1234 for counselor):");
    const role = client_id === "1234" ? "Counselor" : "Student";
    roleRef.current = role; // Store the role

    const webSocket = new WebSocket(`ws://localhost:8000/ws/${client_id}`);
    setWs(webSocket);

    // Handle incoming WebSocket messages
    webSocket.onmessage = (event) => {
      setMessages((prevMessages) => [...prevMessages, { sender: "bot", text: event.data }]);
    };

    // Cleanup WebSocket connection on unmount
    return () => {
      webSocket.close();
    };
  }, []);

  // Function to send message
  const sendMessage = () => {
    if (input.trim() && ws) {
      setMessages([...messages, { sender: "user", text: input }]);
      ws.send(input); // Send message to WebSocket
      setInput(""); // Clear input
    }
  };

  // Handle "Enter" key press to send message
  const handleKeyPress = (e) => {
    if (e.key === "Enter") {
      sendMessage();
    }
  };

  return (
    <div className="chatbot-container">
      <h1>Role: {roleRef.current}</h1>
      <div className="chatbot-messages">
        {messages.map((msg, index) => (
          <div key={index} className={`message ${msg.sender}`}>
            {msg.text}
          </div>
        ))}
      </div>
      <div className="chatbot-input-container">
        <input
          type="text"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          onKeyPress={handleKeyPress}
          placeholder="Type a message..."
          className="chatbot-input"
        />
        <button onClick={sendMessage} className="chatbot-send-button">
          Send
        </button>
      </div>
    </div>
  );
}

export default WebSocketChat;
